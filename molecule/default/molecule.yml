---
dependency:
  name: galaxy
  options:
    ignore-certs: true
    ignore-errors: true
    role-file: requirements.yml
    requirements-file: requirements.yml
driver:
  name: docker
platforms:
  - name: molecule-docker-compose-1
    image: python:slim-bullseye
    pre_build_image: true
    env:
      http_proxy: "${http_proxy}"
      https_proxy: "${https_proxy}"
      no_proxy: "${no_proxy} "
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
  - name: molecule-docker-compose-2
    image: python:slim-bullseye
    pre_build_image: true
    env:
      http_proxy: "${http_proxy}"
      https_proxy: "${https_proxy}"
      no_proxy: "${no_proxy} "
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
provisioner:
  name: ansible
  env:
    ANSIBLE_VERBOSITY: 1
  config_options:
    defaults:
      callbacks_enabled: profile_tasks, timer
  inventory:
    host_vars:
      molecule-docker-compose-1:
        docker_compose_install: true
        docker_compose_version: "1.29.2"
      molecule-docker-compose-2:
        docker_compose_install: true
        docker_compose_version: "v2.20.3"
scenario:
  name: default
  converge_sequence:
    - converge
  create_sequence:
    - dependency
    - create
    - prepare
  destroy_sequence:
    - destroy
verifier:
  name: ansible
